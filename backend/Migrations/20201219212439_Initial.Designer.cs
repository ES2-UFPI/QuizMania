// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizMania.WebAPI;

namespace QuizMania.WebAPI.Migrations
{
    [DbContext(typeof(QuizContext))]
    [Migration("20201219212439_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ChoiceQuestionAnswer", b =>
                {
                    b.Property<long>("AnswersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionAnswersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnswersId", "QuestionAnswersId");

                    b.HasIndex("QuestionAnswersId");

                    b.ToTable("ChoiceQuestionAnswer");
                });

            modelBuilder.Entity("QuestionQuiz", b =>
                {
                    b.Property<long>("QuestionsId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("QuizzesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("QuestionsId", "QuizzesId");

                    b.HasIndex("QuizzesId");

                    b.ToTable("QuestionQuiz");
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.Choice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.QuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QuizFeedbackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuizFeedbackId");

                    b.ToTable("QuestionAnswers");
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.Quiz", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.QuizFeedback", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperienceGained")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GoldGained")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("QuizId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("QuizFeedbacks");
                });

            modelBuilder.Entity("ChoiceQuestionAnswer", b =>
                {
                    b.HasOne("QuizMania.WebAPI.Models.Choice", null)
                        .WithMany()
                        .HasForeignKey("AnswersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuizMania.WebAPI.Models.QuestionAnswer", null)
                        .WithMany()
                        .HasForeignKey("QuestionAnswersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuestionQuiz", b =>
                {
                    b.HasOne("QuizMania.WebAPI.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuizMania.WebAPI.Models.Quiz", null)
                        .WithMany()
                        .HasForeignKey("QuizzesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.Choice", b =>
                {
                    b.HasOne("QuizMania.WebAPI.Models.Question", null)
                        .WithMany("Choices")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.QuestionAnswer", b =>
                {
                    b.HasOne("QuizMania.WebAPI.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("QuizMania.WebAPI.Models.QuizFeedback", null)
                        .WithMany("QuestionAnswers")
                        .HasForeignKey("QuizFeedbackId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.QuizFeedback", b =>
                {
                    b.HasOne("QuizMania.WebAPI.Models.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.Question", b =>
                {
                    b.Navigation("Choices");
                });

            modelBuilder.Entity("QuizMania.WebAPI.Models.QuizFeedback", b =>
                {
                    b.Navigation("QuestionAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
